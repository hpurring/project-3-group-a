[{"/Users/patriciacancio/Desktop/Student/project-3-group-a/client/src/index.js":"1","/Users/patriciacancio/Desktop/Student/project-3-group-a/client/src/reportWebVitals.js":"2","/Users/patriciacancio/Desktop/Student/project-3-group-a/client/src/App.js":"3","/Users/patriciacancio/Desktop/Student/project-3-group-a/client/src/components/Header/index.js":"4","/Users/patriciacancio/Desktop/Student/project-3-group-a/client/src/components/Contacts/index.js":"5","/Users/patriciacancio/Desktop/Student/project-3-group-a/client/src/components/Navigator/index.js":"6","/Users/patriciacancio/Desktop/Student/project-3-group-a/client/src/components/Signup/index.js":"7","/Users/patriciacancio/Desktop/Student/project-3-group-a/client/src/components/Home/index.js":"8","/Users/patriciacancio/Desktop/Student/project-3-group-a/client/src/components/Login/index.js":"9","/Users/patriciacancio/Desktop/Student/project-3-group-a/client/src/utils/auth.js":"10","/Users/patriciacancio/Desktop/Student/project-3-group-a/client/src/utils/mutations.js":"11","/Users/patriciacancio/Desktop/Student/project-3-group-a/client/src/components/Card/index.js":"12","/Users/patriciacancio/Desktop/Student/project-3-group-a/client/src/pages/Search/index.js":"13","/Users/patriciacancio/Desktop/Student/project-3-group-a/client/src/utils/queries.js":"14","/Users/patriciacancio/Desktop/Student/project-3-group-a/client/src/pages/Profile/index.js":"15","/Users/patriciacancio/Desktop/Student/project-3-group-a/client/src/components/EditForm/index.js":"16","/Users/patriciacancio/Desktop/Student/project-3-group-a/client/src/utils/firebase.js":"17","/Users/patriciacancio/Desktop/Student/project-3-group-a/client/src/components/Footer/index.js":"18"},{"size":519,"mtime":1647297532607,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1646785635875,"results":"21","hashOfConfig":"20"},{"size":946,"mtime":1647450783078,"results":"22","hashOfConfig":"20"},{"size":966,"mtime":1647449359678,"results":"23","hashOfConfig":"20"},{"size":645,"mtime":1647449359678,"results":"24","hashOfConfig":"20"},{"size":3102,"mtime":1647394278901,"results":"25","hashOfConfig":"20"},{"size":3668,"mtime":1647392737324,"results":"26","hashOfConfig":"20"},{"size":4002,"mtime":1647449359678,"results":"27","hashOfConfig":"20"},{"size":2879,"mtime":1647392737324,"results":"28","hashOfConfig":"20"},{"size":1234,"mtime":1647303105339,"results":"29","hashOfConfig":"20"},{"size":2227,"mtime":1647384714755,"results":"30","hashOfConfig":"20"},{"size":2459,"mtime":1647383175413,"results":"31","hashOfConfig":"20"},{"size":2533,"mtime":1647449359679,"results":"32","hashOfConfig":"20"},{"size":492,"mtime":1647112250687,"results":"33","hashOfConfig":"20"},{"size":576,"mtime":1647449359678,"results":"34","hashOfConfig":"20"},{"size":7471,"mtime":1647449359678,"results":"35","hashOfConfig":"20"},{"size":786,"mtime":1647392737325,"results":"36","hashOfConfig":"20"},{"size":915,"mtime":1647450687269,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"c6do5m",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/patriciacancio/Desktop/Student/project-3-group-a/client/src/index.js",[],["79","80"],"/Users/patriciacancio/Desktop/Student/project-3-group-a/client/src/reportWebVitals.js",[],"/Users/patriciacancio/Desktop/Student/project-3-group-a/client/src/App.js",[],"/Users/patriciacancio/Desktop/Student/project-3-group-a/client/src/components/Header/index.js",[],"/Users/patriciacancio/Desktop/Student/project-3-group-a/client/src/components/Contacts/index.js",[],"/Users/patriciacancio/Desktop/Student/project-3-group-a/client/src/components/Navigator/index.js",[],"/Users/patriciacancio/Desktop/Student/project-3-group-a/client/src/components/Signup/index.js",[],"/Users/patriciacancio/Desktop/Student/project-3-group-a/client/src/components/Home/index.js",["81"],"import React from 'react';\nimport './home.css';\nimport me from \"../../MOCK_ME.json\";\nimport Card from '../../components/Card';\nimport Auth from '../../utils/auth';\nimport '../../components/Card/style.css';\nimport {HiOutlineMailOpen } from 'react-icons/hi';\nimport {BsFillTelephoneForwardFill} from 'react-icons/bs';\nimport {IoIosBusiness} from 'react-icons/io';\nimport {CgWebsite} from 'react-icons/cg';\nimport {AiFillInstagram} from 'react-icons/ai';\nimport {AiOutlineLinkedin} from 'react-icons/ai';\nimport {MdOutlineBusinessCenter} from 'react-icons/md';\n\nfunction Home() {\n\n    if (!Auth.loggedIn()) {\n        return(\n            <>\n                    <section className=\"homeContainer\">\n            <div className=\"homeText\">\n                <h1 className=\"welcome\">welcome to QRad.</h1>\n                <p className=\"description\">QRad allows you to maintain a list of people you've met in real life.\n                <br></br>\n                <br></br>\n                Business cards are useful—until you forget them, run out, lose your new contact’s card, etc. With QRad, you’re always ready to provide your contact information, and you always have a record of those you’ve met.\n                <br></br>\n                <br></br>\n                Create your digital business card today.\n                </p>\n            </div>\n        </section>\n              <div className=\"card\">\n                  <div className='intro'>\n                      <h4>Delores Deville</h4>\n                          <p className=\"pronouns\">(she/her)</p>\n    \n                          <p className=\"tagline\">It's business time! </p>\n                  </div>\n    \n                  <div className='card-img'>\n                      <img alt =\"delores-photo\" src=\"https://i.pinimg.com/originals/75/3d/54/753d54f1c9137aca6bb000234b6abeb4.jpg\"/>\n                  </div>\n    \n                  <ul>\n                          <li>\n                              <IoIosBusiness /> \n                              Good const\n                          </li>\n                          <li>\n                              <MdOutlineBusinessCenter />\n                              Librarian\n                          </li>\n                      <li>\n                          <HiOutlineMailOpen /> delores@goodco.com\n                      </li>\n                          <li>\n                              <BsFillTelephoneForwardFill /> \n                              (999)999-999\n                          </li>\n                          <li>\n                              <CgWebsite />\n                              goodco.com/delores\n                          </li>\n                          <li>\n                              <AiOutlineLinkedin /> \n                              linkedin.com/deloresdeville\n                          </li>\n                          <li>\n                              <AiFillInstagram />  \n                              instagram.com/deloresdeville777\n                          </li>\n                  </ul>            \n              </div>            \n            </>\n\n          )  \n      }\n\n    return (\n        <>\n            <section className=\"homeContainer\">\n                <div className=\"homeText\">\n                    <h1 className=\"welcome\">welcome to QRad.</h1>\n                    <p className=\"description\">QRad allows you to maintain a list of people you've met in real life.\n                    <br></br>\n                    <br></br>\n                    Business cards are useful—until you forget them, run out, lose your new contact’s card, etc. With QRad, you’re always ready to provide your contact information, and you always have a record of those you’ve met.\n                    <br></br>\n                    <br></br>\n                    Create your digital business card today.\n                    </p>\n                </div>\n            </section>    \n            {me && \n      <Card data={me}/>\n    }   \n        </>\n\n    )\n};\n\nexport default Home;\n","/Users/patriciacancio/Desktop/Student/project-3-group-a/client/src/components/Login/index.js",[],"/Users/patriciacancio/Desktop/Student/project-3-group-a/client/src/utils/auth.js",[],"/Users/patriciacancio/Desktop/Student/project-3-group-a/client/src/utils/mutations.js",[],"/Users/patriciacancio/Desktop/Student/project-3-group-a/client/src/components/Card/index.js",[],"/Users/patriciacancio/Desktop/Student/project-3-group-a/client/src/pages/Search/index.js",["82","83","84","85"],"import \"./style.css\";\nimport json from \"./data/MOCK_DATA.json\";\nimport React, { useState } from \"react\";\nimport Card from \"../../components/Contacts\";\nimport ContactList from \"../../components/Card\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { ADD_CONTACT } from \"../../utils/mutations\";\nimport { QUERY_ME } from \"../../utils/queries\";\nimport Auth from \"../../utils/auth\";\n\n\nfunction Search() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  // const [show, setShow] = useState(false)\n  const addContact = useMutation(ADD_CONTACT);\n  const { data } = useQuery(QUERY_ME);\n  let user = {};\n\n  // if (Auth.loggedIn()) {\n  //   user = data.me;\n  // }\n\n  const handleClick = async () => {\n    try {\n      await addContact({\n        variables: { id: user._id },\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"Search\">\n        <center>\n          <input\n            type=\"text\"\n            placeholder=\"Search Contacts...\"\n            onChange={(event) => {\n              setSearchTerm(event.target.value);\n            }}\n          />\n          <hr />\n\n          {json\n            .filter((val) => {\n              if (searchTerm === \"\") {\n                return \"\";\n                // } else if (val.firstName.toLowerCase().includes(searchTerm.toLowerCase())) {\n                //     return val\n              } else if (\n                val.lastName.toLowerCase().includes(searchTerm.toLowerCase())\n              ) {\n                return val;\n              }\n\n            })\n            .map((val, key) => {\n              return (\n                <div className=\"user\" key={key}>\n\n                  <Card data={val} />\n                  {/* {              \n                  show?<p><BsFillTelephoneForwardFill/> {val.phone} <p> <IoIosBusiness/> {val.company_name}</p> \n                  <a href=\"mailto:\"><HiOutlineMailOpen/> {val.email}</a>\n                  <br/>\n                  <a href={val.website} target='_blank'><CgWebsite/> Website</a> \n                  <br/>\n                  <a href={val.linkedin} target='_blank'><BsLinkedin/> Linkedin</a>\n                  <br/>\n                  <a href={val.instagram} target='_blank'><AiFillInstagram/> Instagram</a></p>:null\n                  } */}\n\n                  <button onClick={handleClick}>Add Contact</button>\n                </div>\n              );\n            })}\n        </center>\n      </div>  \n      {/* {user.contacts && <ContactList />}   */}\n    </>\n\n  );\n}\n\nexport default Search;\n","/Users/patriciacancio/Desktop/Student/project-3-group-a/client/src/utils/queries.js",[],"/Users/patriciacancio/Desktop/Student/project-3-group-a/client/src/pages/Profile/index.js",["86","87","88"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { QUERY_ME } from '../../utils/queries';\nimport { useQuery } from '@apollo/client';\nimport Auth from '../../utils/auth';\nimport me from '../../MOCK_ME.json';\n\nconst Profile = () => {\n\n// const { data } = useQuery(QUERY_ME);\n\n  if (!me.cards) {\n      return(\n          <>\n            <Link to='/editform'>\n              Create my QRad \n            </Link>\n              \n          </>\n      )\n  }\n\n  return(\n    <Link to='/editform'>\n      Update my QRad \n    </Link>\n  )    \n}\n\nexport default Profile;","/Users/patriciacancio/Desktop/Student/project-3-group-a/client/src/components/EditForm/index.js",["89"],"import React, { useState } from \"react\";\nimport { ADD_CARD } from \"../../utils/mutations\";\nimport { useMutation } from \"@apollo/client\";\n// import Auth from \"../../utils/auth\";\nimport { storage } from \"../../utils/firebase\";\nimport { ref, getDownloadURL, uploadString } from \"firebase/storage\";\n\n//export and calling function\nexport default function EditForm() {\n  const addCard = useMutation(ADD_CARD);\n  //targeting formState and then setFormState\n  // allows to setup the form for the values so that consologging will work\n  const [formState, setFormState] = useState({\n    firstname: \"\",\n    lastname: \"\",\n    pronouns: \"\",\n    title: \"\",\n    tagline: \"\",\n    email: \"\",\n    phone: \"\",\n    website: \"\",\n    LinkedIn: \"\",\n    Twitter: \"\",\n    Instagram: \"\",\n  });\n  const [selectedImg, setSelectedImg] = useState(null);\n  const [img, setImg] = useState(null);\n  //form state targets specific event values\n  const handlechange = (e) => {\n    const { name, value } = e.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n  console.log(formState);\n  const previewImg = (e) => {\n    const reader = new FileReader();\n    if (e.target.files[0]) {\n      reader.readAsDataURL(e.target.files[0]);\n      setImg(e.target.files[0]);\n    }\n    reader.onload = (readerEvent) => {\n      setSelectedImg(readerEvent.target.result);\n    };\n  };\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    // use try/catch instead of promises to handle errors\n    const uploadImg = ref(storage, `/image/${img.name}`);\n    try {\n      await uploadString(uploadImg, selectedImg, \"data_url\").then(\n        async (snapshot) => {\n          const profileURL = await getDownloadURL(uploadImg);\n          console.log(profileURL);\n          await addCard({\n            variables: { ...formState, avatar: profileURL },\n          });\n        }\n      );\n    } catch (err) {\n      console.log(err);\n    }\n\n    // try {\n    //   const { data } = await addCard({\n    //     variables: { ...formState, avatar: profileURL }\n    //   });\n    //   Auth.login(data.addUser.token);\n    // } catch (e) {\n    //   console.error(e);\n    // }\n  };\n\n  return (\n    //adding css into the js file instead of using a css file\n    <div id=\"biz-profile\">\n      <p i-right-wrapper className=\"biz-card\">\n        {/* missing picture of the business card */}\n        *business card*\n      </p>\n      {/* form for business card  */}\n      <form onSubmit={handleFormSubmit}>\n        <label>\n          Firstname:\n          <input\n            placeholder=\"firstname\"\n            onChange={handlechange}\n            name=\"firstname\"\n            value={formState.firstname}\n          />\n        </label>\n        <label>\n          Lastname:\n          <input\n            placeholder=\"lastname\"\n            onChange={handlechange}\n            name=\"lastname\"\n            value={formState.lastname}\n          />\n        </label>\n        <label>\n          Pronouns:\n          <input\n            placeholder=\"pronouns\"\n            onChange={handlechange}\n            name=\"pronouns\"\n            value={formState.pronouns}\n          />\n        </label>\n        <label>\n          Title:\n          <input\n            placeholder=\"title\"\n            onChange={handlechange}\n            name=\"title\"\n            value={formState.title}\n          />\n        </label>\n        <label>\n          Tagline:\n          <input\n            placeholder=\"tagline\"\n            onChange={handlechange}\n            name=\"tagline\"\n            value={formState.tagline}\n          />\n        </label>\n        <label>\n          Email:\n          <input\n            placeholder=\"email\"\n            onChange={handlechange}\n            name=\"email\"\n            value={formState.email}\n          />\n        </label>\n        <label>\n          Phone:\n          <input\n            placeholder=\"phone\"\n            onChange={handlechange}\n            name=\"phone\"\n            value={formState.phone}\n          />\n        </label>\n        <label>\n          Company:\n          <input\n            placeholder=\"company\"\n            onChange={handlechange}\n            name=\"company\"\n            value={formState.company}\n          />\n        </label>\n        <label>\n          Website:\n          <input\n            placeholder=\"website\"\n            onChange={handlechange}\n            name=\"website\"\n            value={formState.website}\n          />\n        </label>\n        <label>\n          LinkedIn:\n          <input\n            placeholder=\"LinkedIn\"\n            onChange={handlechange}\n            name=\"LinkedIn\"\n            value={formState.LinkedIn}\n          />\n        </label>\n        <label>\n          Twitter:\n          <input\n            placeholder=\"Twitter\"\n            onChange={handlechange}\n            name=\"Twitter\"\n            value={formState.Twitter}\n          />\n        </label>\n        <label>\n          Instagram:\n          <input\n            placeholder=\"Instagram\"\n            onChange={handlechange}\n            name=\"Instagram\"\n            value={formState.Instagram}\n          />\n        </label>\n        <input type=\"file\" onChange={previewImg} />\n        {selectedImg ? <img src={selectedImg} alt=\"preview\" /> : \"\"}\n      </form>\n      <button onClick={handleFormSubmit}>Save Edit</button>\n    </div>\n  );\n}\n\n//all imports for user profile\n// import { Redirect, useParams } from 'react-router-dom';\n// import ThoughtForm from '../components/ThoughtForm';\n// import ThoughtList from '../components/ThoughtList';\n// import FriendList from '../components/FriendList';\n// import { QUERY_USER, QUERY_ME } from '../utils/queries';\n// import { ADD_FRIEND } from '../utils/mutations';\n// import Auth from '../utils/auth';\n\n//for profile  purposes so that username links with userParams\n// const Profile = (props) => {\n//     const { username: userParam } = useParams();\n\n//     const [addFriend] = useMutation(ADD_FRIEND);\n//     const { loading, data } = useQuery(userParam ? QUERY_USER : QUERY_ME, {\n//       variables: { username: userParam },\n//     });\n\n//     const user = data?.me || data?.user || {};\n\n//     // redirect to personal profile page if username is yours\n//     if (Auth.loggedIn() && Auth.getProfile().data.username === userParam) {\n//       return <Redirect to=\"/profile\" />;\n//     }\n\n//     if (loading) {\n//       return <div>Loading...</div>;\n//     }\n\n//     if (!user?.username) {\n//       return (\n//         <h4>\n//           You need to be logged in to see this. Use the navigation links above to\n//           sign up or log in!\n//         </h4>\n//       );\n//     }\n\n{\n  /* <div className=\"flex-row mb-3\">\n        <h2 className=\"bg-dark text-secondary p-3 display-inline-block\">\n          Viewing {userParam ? `${user.username}'s` : 'your'} profile.\n        </h2>\n\n        {userParam && (\n          <button className=\"btn ml-auto\" onClick={handleClick}>\n            Add Friend\n          </button>\n        )}\n      </div>\n      <div className=\"flex-row justify-space-between mb-3\">\n        <div className=\"col-12 mb-3 col-lg-8\">\n          <ThoughtList\n            thoughts={user.thoughts}\n            title={`${user.username}'s thoughts...`}\n          />\n        </div>\n        <div className=\"col-12 col-lg-3 mb-3\">\n          <FriendList\n            username={user.username}\n            friendCount={user.friendCount}\n            friends={user.friends}\n          />\n        </div>\n      </div>\n      <div className=\"mb-3\">{!userParam && <ThoughtForm />}</div> */\n}\n","/Users/patriciacancio/Desktop/Student/project-3-group-a/client/src/utils/firebase.js",[],"/Users/patriciacancio/Desktop/Student/project-3-group-a/client/src/components/Footer/index.js",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":42,"column":23,"nodeType":"96","endLine":42,"endColumn":133},{"ruleId":"97","severity":1,"message":"98","line":5,"column":8,"nodeType":"99","messageId":"100","endLine":5,"endColumn":19},{"ruleId":"97","severity":1,"message":"101","line":9,"column":8,"nodeType":"99","messageId":"100","endLine":9,"endColumn":12},{"ruleId":"97","severity":1,"message":"102","line":16,"column":11,"nodeType":"99","messageId":"100","endLine":16,"endColumn":15},{"ruleId":"103","severity":1,"message":"104","line":47,"column":27,"nodeType":"105","messageId":"106","endLine":47,"endColumn":29},{"ruleId":"97","severity":1,"message":"107","line":3,"column":10,"nodeType":"99","messageId":"100","endLine":3,"endColumn":18},{"ruleId":"97","severity":1,"message":"108","line":4,"column":10,"nodeType":"99","messageId":"100","endLine":4,"endColumn":18},{"ruleId":"97","severity":1,"message":"101","line":5,"column":8,"nodeType":"99","messageId":"100","endLine":5,"endColumn":12},{"ruleId":"109","severity":1,"message":"110","line":238,"column":1,"nodeType":"111","messageId":"112","endLine":266,"endColumn":2},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'ContactList' is defined but never used.","Identifier","unusedVar","'Auth' is defined but never used.","'data' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'QUERY_ME' is defined but never used.","'useQuery' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation"]